---
- name: Git clone Asdf VM
  git:
    repo: "https://github.com/asdf-vm/asdf.git"
    dest: "/home/{{ user.name }}/.asdf"
    refspec: v0.10.0
    force: yes
    update: no
  become: yes
  become_user: "{{ user.name }}"

- name: Test for initialise completions
  shell: grep -c "ASDF_DIR" "/home/{{ user.name }}/.zshrc" || true
  register: test_completions

- name: Test for nodejs plugin installation
  shell: (. $HOME/.asdf/asdf.sh && asdf list) | grep "nodejs"
  become: yes
  become_user: "{{ user.name }}"
  ignore_errors: yes
  register: test_nodejs_plugin

- name: Test for node installation
  shell: (. $HOME/.asdf/asdf.sh && node version)
  become: yes
  become_user: "{{ user.name }}"
  ignore_errors: yes
  register: test_node

- debug:
    msg:
    - "{{ test_nodejs_plugin }}"
    - "{{ test_node }}"
    verbosity: 2

- name: Add initialise completions 
  blockinfile:
    dest: "/home/{{ user.name }}/.zshrc"
    insertafter: 'autoload -Uz compinit'
    content: |
      . $HOME/.asdf/asdf.sh
      fpath=(${ASDF_DIR}/completions $fpath)
  when: test_completions.stdout == "0"

- name: Add NodeJS plugin
  shell: . $HOME/.asdf/asdf.sh && asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
  become: yes
  become_user: "{{ user.name }}"
  when: test_nodejs_plugin.stdout.find("nodejs") == -1

- name: Add NodeJS latest version
  shell: . $HOME/.asdf/asdf.sh && asdf install nodejs latest
  become: yes
  become_user: "{{ user.name }}"
  ignore_errors: yes
  when: test_node.failed == true

- name: Add NodeJS latest version as current global version
  shell: . $HOME/.asdf/asdf.sh && asdf global nodejs latest
  become: yes
  become_user: "{{ user.name }}"

- name: Add Yarn
  shell: . $HOME/.asdf/asdf.sh && npm install -g yarn
  become: yes
  become_user: "{{ user.name }}"

- name: "Add other langs latest version"
  shell: . $HOME/.asdf/asdf.sh && asdf install {{ item }} latest && asdf global {{ item }} latest
  ignore_errors: yes
  become: yes
  become_user: "{{ user.name }}"
  ignore_errors: yes
  with_items:
    - erlang
    - elixir
